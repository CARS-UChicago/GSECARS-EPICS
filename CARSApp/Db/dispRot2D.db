# This database implements a generic 2-D coordinate transformation.  Given two
# real motors $(P)$(M1DRV) and $(P)$(M1DRV), which move parallel to each other,
# it will move two soft motors $(P)$(MXP) and $(P)$(MCHIP) as the weighted 
# average and difference of the two real motors.  The weighting factors are 
# as follows:
# MXP = blah blah blah
# MCHIP = xxxxx
# MCHIP C1 term is a distance

# These two records are where the soft motors write their output.
# They are needed because writing to a transform record field does not
# cause the record to process?
# We use forward links to the transform record (rather than making the INPA and
# INPB fields of the transform record CP) so that the scan record waits 
# for the motors to move.
grecord(ao,"$(P)$(MXP)DVAL") {
	field(FLNK, "$(P)$(T)Drive")
}
grecord(ao,"$(P)$(MCHIP)DVAL") {
	field(FLNK, "$(P)$(T)Drive")
}

# This record is processed whenever the soft motor records SUM or DIFF write
# new values to the DVAL records above.
# Note: the INPA and INPB fields get their values directly from the .DVAL
# fields of the soft motor records, rather than from the DVAL record above.
# This is because the .DVAL fields are always correct, while the DVAL records
# do not get updated when the soft motor .DVAL fields are modified in SET mode.
grecord(transform,"$(P)$(T)Drive") {
	field(INPA,"$(P)$(MXP).DVAL NPP NMS")
	field(INPB,"$(P)$(MCHIP).DVAL NPP NMS")
	field(INPC,"$(P)$(MCHIP)C1.VAL NPP NMS")
  field(CLCD,"0.0174533 * B")
	field(CLCE,"A+C*SIN(D)")
	field(OUTE,"$(P)$(M1DRV) PP MS")
	field(CLCF,"B")
  field(OUTF,"$(P)$(M2DRV) PP MS")
	field(PREC,"$(PREC)")
}

# This record calculates the readback positions of the soft motors.  It 
# processes whenever the readbacks of the real motors change, or whenever
# one of the the geometry constants changes.
grecord(transform,"$(P)$(T)Readback") {
	field(INPA,"$(P)$(M1RBV) CP MS")
	field(INPB,"$(P)$(M2RBV) CP MS")
	field(INPC,"$(P)$(MCHIP)C1.VAL CP MS")
  field(CLCD,"0.0174533 * B")
	field(CLCG,"A-C*SIN(D)")
	field(CLCH,"B")
	field(IVLA,"Do Nothing")
	field(PREC,"$(PREC)")
}

# This record processes if either of the soft motor STOP fields is set.
grecord(dfanout,"$(P)$(T)Stop") {
        field(VAL,"1")
        field(OUTA,"$(P)$(M1STOP) PP MS")
        field(OUTB,"$(P)$(M2STOP) PP MS")
}

# This record computes whether the compound motor is done moving.  
# It goes to 1 when both real motors are done moving.
# positions of the real motors.
grecord(calcout,"$(P)$(T)Done") {
        field(INPA,"$(P)$(M1DONE) CP MS")
        field(INPB,"$(P)$(M2DONE) CP MS")
        field(CALC,"A & B")
}
