file "$(GALIL)/db/galil_motor-v6-10up.template"
{
pattern
{   P,               M,   PORT,  ADDR,   EGU,      DESC,       VELO,  VMAX,  ACCL,  BDST,  BVEL,  BACC,  MRES,  SREV, ERES,  PREC, DHLM,  DLLM, OFF, UEIP, RTRY, NTM,   PCOF, ICOF, DCOF}

   # m1 and m2 are the rotary feedthroughs for the gas loading apparatus.
   # User units are revolutions of the feedthrough shaft.  Assume half-step motor and 50:1 gear reducer.

   {"13GalilTest:", "m1", "Galil", 0,   rev,  "Feedthrough 1",  0.05,  0.05,  0.1,    0,     0,     5,   5e-5,   400, 5e-5,    4,   20,   -20,   0,   0,    0,   "YES",  0,    0,    0}
   {"13GalilTest:", "m2", "Galil", 1,   rev,  "Feedthrough 2",  0.05,  0.05   0.1,    0,     0,     5,   5e-5,   400, 5e-5,    4,   20,   -20,   0,   0,    0,   "YES",  0,    0,    0}

   # These are Newport CMA stages.  They have 20 steps/rev, 0.5mm leadscrew, 256:1 gear reducer.  We are half-stepping

   {"13GalilTest:", "m3", "Galil", 2,   microns,  "Laser_X",    200.,   200.,  0.2,   0,     0,     5,  .048828, 10240, .048828, 1,  27000,  -150, 0,   0,    0,    "YES", 0,    0,    0}
   {"13GalilTest:", "m4", "Galil", 3,   microns,  "Laser_Z",    200.,   200.,  0.2,   0,     0,     5,  .048828, 10240, .048828, 1,  27000,  -150, 0,   0,    0,    "YES", 0,    0,    0}

   # This will be an MFN stage for focus
   {"13GalilTest:", "m5", "Galil", 4,   microns,  "Focus",      200.,   200.,  0.2,   0,     0,     5,  .048828, 10240, .048828, 1,  27000,  -150, 0,   0,    0,    "YES", 0,    0,    0}

   # These are currently unused
   {"13GalilTest:", "m6", "Galil", 5,   microns,  "Unused1",    200.,   200.,  0.2,   0,     0,     5,  .048828, 10240, .048828, 1,  27000,  -150, 0,   0,    0,    "YES", 0,    0,    0}
   {"13GalilTest:", "m7", "Galil", 6,   microns,  "Unused2",    200.,   200.,  0.2,   0,     0,     5,  .048828, 10240, .048828, 1,  27000,  -150, 0,   0,    0,    "YES", 0,    0,    0}
   {"13GalilTest:", "m8", "Galil", 7,   microns,  "Unused3",    200.,   200.,  0.2,   0,     0,     5,  .048828, 10240, .048828, 1,  27000,  -150, 0,   0,    0,    "YES", 0,    0,    0}
}

#file "$(CARS)/db/asynMotor.db"
#{
#pattern
#{P,          M,      DTYP,      PORT,  ADDR, DESC,         EGU,   DIR,     VELO,   VBAS,    ACCL,  BDST,   BVEL,  BACC,  SREV,    UREV,  PREC,  DHLM, DLLM}
#
# m1 and m2 are the rotary feedthroughs for the gas loading apparatus.
# User units are revolutions of the feedthrough shaft.  Assume half-step motor and 50:1 gear reducer.
# M2 has opposite sign from M1, so they both tighten with positive move
#{13GalilTest:, m1, "asynMotor",  Galil, 0, "Feedthrough 1",  rev,    Pos,    .05,   .001,     .1,    0,      1,     .2,    400,     -.02,    4,     20,  -20}
#{13GalilTest:, m2, "asynMotor",  Galil, 1, "Feedthrough 2",  rev,    Pos,    .05,   .001,     .1,    0,      1,     .2,    400,     -.02,    4,     20,  -20}

# These are Newport CMA stages.  They have 20 steps/rev, 0.5mm leadscrew, 256:1 gear reducer.  We are half-stepping
#{13GalilTest:, m3, "asynMotor",  Galil, 2, "Laser_X",    microns,    Pos,   200.,     10,     .2,    0,     10,     .2,  10240,     500,    1,  27000, -150}
#{13GalilTest:, m4, "asynMotor",  Galil, 3, "Laser_Z",    microns,    Pos,   200.,     10,     .2,    0,     10,     .2,  10240,     500,    1,  27000, -150}
#}

# SCAN - Scan period for monitor records.  Use passive when only epics will change value (default)
#      - Periodic scan will slow controller update performance (poller)
# MTRTYPE - motor type =
#   0 - Servo
#		1 - Reverse servo
#		2 - High active stepper
#		3 - Low active stepper
#		4 - Reverse high active stepper
#		5 - Reverse low active stepper
# MTRON - motor off 0, motor on 1

file "$(GALIL)/db/galil_motor_extras.template"
{
pattern
{   P,          M,   PORT,  ADDR, PREC, SCAN,     MTRTYPE, MTRON, EGU  }
 {13GalilTest:, m1,  Galil, 0,    3,    Passive,  3,       1,     mm }
 {13GalilTest:, m2,  Galil, 1,    3,    Passive,  3,       1,     mm }
 {13GalilTest:, m3,  Galil, 2,    3,    Passive,  3,       1,     mm }
 {13GalilTest:, m4,  Galil, 3,    3,    Passive,  3,       1,     mm }
 {13GalilTest:, m5,  Galil, 4,    3,    Passive,  3,       1,     mm }
 {13GalilTest:, m6,  Galil, 5,    3,    Passive,  3,       1,     mm }
 {13GalilTest:, m7,  Galil, 6,    3,    Passive,  3,       1,     mm }
 {13GalilTest:, m8,  Galil, 7,    3,    Passive,  3,       1,     mm }
}

# Pseudomotors to move motors together and opposed
file "$(MOTOR)/db/pseudoMotor.db"
{
pattern
{P,           M,   DINP,                          OUT,                           RDBL,                                 STOO,                           DESC,        EGU,  DIR, VELO, VBAS, ACCL, BDST, BVEL, BACC, MRES,   RRES, PREC, DHLM, DLLM}

{13GalilTest:,  pm1, "13GalilTest:Cell:Done NPP NMS", "13GalilTest:pm1DVAL.VAL PP MS", "13GalilTest:Cell:Readback.G NPP NMS", "13GalilTest:Cell:Stop PP MS",    "Together",   rev,  Pos,   1,    .1,   .1,    0,    1,   .1, .00005,     1.0,  4,    100, -100}
{13GalilTest:,  pm2, "13GalilTest:Cell:Done NPP NMS", "13GalilTest:pm2DVAL.VAL PP MS", "13GalilTest:Cell:Readback.H NPP NMS", "13GalilTest:Cell:Stop PP MS",    "Opposed",    rev,  Pos,   1,    .1,   .1,    0,    1,   .1, .00005,     1.0,  4,    100, -100}
}
file "$(MOTOR)/db/sumDiff2D.db"
{
pattern
{P,          T,     SUM, DIFF,   M1DRV,    M1RBV,   M2DRV,   M2RBV,   M1STOP,   M1DONE,   M2STOP,   M2DONE,  PREC}
{13GalilTest:, Cell:, pm1, pm2,    m1.VAL,   m1.RBV,  m2.VAL,  m2.RBV,  m1.STOP,  m1.DMOV,  m2.STOP,  m2.DMOV, 4}
}

